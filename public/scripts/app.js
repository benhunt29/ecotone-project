var app=angular.module("ecotoneApp",["ngRoute","ngMaterial","ngMessages","validation.match"]);app.config(["$mdThemingProvider","$routeProvider","$locationProvider","$httpProvider",function(e,t,o,n){o.html5Mode(!0),e.theme("default").primaryPalette("green").accentPalette("blue-grey",{"default":"600"}).warnPalette("orange"),t.when("/",{templateUrl:"/views/calculator.html",controller:"calculateCtrl as ctrl"}).when("/login",{templateUrl:"/views/login.html",controller:"loginCtrl"}).when("/register",{templateUrl:"/views/register.html",controller:"createAccountCtrl"}).when("/admin",{templateUrl:"/views/admin.html",controller:"adminCtrl as ctrl"}).when("/account",{templateUrl:"/views/account.html",controller:""}).when("/dashboard",{templateUrl:"/views/dashboard.html",controller:"dashboardCtrl"}).when("/projects",{templateUrl:"/views/project.html",controller:"projectsCtrl as ctrl"}).when("/about",{templateUrl:"/views/about.html"}).when("/contact",{templateUrl:"/views/contact.html",controller:""}).when("/privacy",{templateUrl:"/views/privacy.html"}).when("/sources",{templateUrl:"/views/sources.html"}).otherwise({redirectTo:"/"})}]),app.controller("adminCtrl",["$http",function(e){function t(t){var n=t.id;console.log(n),e.put("/suggestion/complete/"+n).then(function(e){o()})}function o(){e.get("/suggestion").then(function(e){var t=e.data;console.log(t),n.suggestions=t})}o();var n=this;n.suggestions="",n.markComplete=t}]),app.controller("adminCtrl",["$http",function(e){function t(t){var n=t.id;console.log(n),e.put("/suggestion/complete/"+n).then(function(e){o()})}function o(){e.get("/suggestion").then(function(e){var t=e.data;console.log(t),n.suggestions=t})}o();var n=this;n.suggestions="",n.markComplete=t}]),app.controller("calculateCtrl",["$http","$mdDialog","$rootScope","authService","$location",function(e,t,o,n,r){function a(e){console.log("Text changed to ",e)}function c(e){void 0==e&&(h.category="",h.subcategory="",h.warmId="",h.weight="",h.conversion="",h.result="")}function l(){var t={warmId:h.warmId||h.category.secondaries[0].warm_id,weight:parseFloat(h.weight)*h.conversion};e.post("/calculations",t).then(function(e){h.result=Math.floor(1e3*Math.abs(e.data))/1e3})}function i(e){return e?h.list.filter(s(e)):h.list}function s(e){var t=e.toLowerCase();return function(e){return-1!=e.primary_cat.indexOf(t)}}function u(){e.post("/suggestion",h.submission).then(function(e){t.hide()})}function p(e){document.getElementById("sidenav").focus(),t.show({templateUrl:"/views/submit-modal.html",clickOutsideToClose:!0,controller:"calculateCtrl",controllerAs:"ctrl",locals:{material:h.searchText}})}o.user=n.getUser(),o.user&&o.user.username&&r.path("/"),e.get("/materials").then(function(e){var t=e.data;t.forEach(function(e){e.primary_cat=e.primary_cat.toLowerCase()}),h.list=t});var h=this;h.list="",h.isDisabled=!1,h.result="",h.querySearch=i,h.selectedItemChange=c,h.searchTextChange=a,h.newSuggestion=p,h.submitSuggestion=u,h.units=[{name:"lbs",conversion:5e-4},{name:"kilos",conversion:.00110231},{name:"tons",conversion:1},{name:"metric tons",conversion:1.10231}],h.submission={email:"",material:"",notes:""},h.newCalculation=l}]),app.controller("createAccountCtrl",["$scope","$http","$location",function(e,t,o){e.user={},e.processForm=function(n){console.log("Posting..."),t({method:"POST",url:"/register",data:e.user,dataType:"json"}).then(function(e){console.log(e),o.path("/login"),alert("Your account has been created.")})}}]),app.controller("dashboardCtrl",["$mdDialog","$scope","$http",function(e,t,o){o.get("/project").then(function(e){console.log(e),t.projectList=e.data}),t.showDelete=function(o){console.log("CLICK");var n=e.confirm().title("Are you sure you want to delete your project?").content("This is permanent.").ariaLabel("Delete project permanently").ok("Delete").cancel("Cancel").targetEvent(o);e.show(n).then(function(){t.alert="Your project has been deleted."},function(){t.alert="Your project has not been deleted."})}}]),app.controller("loginCtrl",["$scope","$http","authService","$location","$rootScope",function(e,t,o,n,r){e.login=function(){t({method:"POST",url:"/login",data:e.form}).then(function(e){o.saveToken(e.data.token),r.user=o.getUser(),n.path("/")})}}]),app.controller("navCtrl",["authService","$scope","$rootScope","$location","$http",function(e,t,o,n,r){o.user=e.getUser(),o.user&&o.user.username&&n.path("/"),t.logout=function(){e.logout(),o.user=e.getUser(),n.path("/")}}]),app.controller("projectsCtrl",["$scope","$http",function(e,t){function o(e){return e?l.projectList.filter(n(e)):l.projectList}function n(e){var t=e.toLowerCase();return function(e){return-1!=e.primary_cat.indexOf(t)}}function r(e){console.log("Text changed to ",e)}function a(e){void 0==e&&(l.project_name="",l.project_description="")}function c(){console.log("Deleting...",l.projectList.ID)}var l=this;l.projectList="",l.result="",l.querySearch=o,l.selectedItemChange=a,l.searchTextChange=r,l.projectTotal=0,l.deleteProjectItem=c,l.id=0,l.getProjectList=function(){t.get("/project",userid).then(function(e){console.log(e);var t=e.data;t.forEach(function(e){project_name=e.project_name.toLowerCase(),project_description=e.project_description,id=e.id}),l.projectList=t})}}]),app.service("authService",["$window",function(e){this.parseJwt=function(t){if(t){var o=t.split(".")[1],n=o.replace("-","+").replace("_","/");return JSON.parse(e.atob(n))}return{}},this.saveToken=function(t){e.localStorage.jwtToken=t,console.log("Saved token:",e.localStorage.jwtToken)},this.getToken=function(){return e.localStorage.jwtToken},this.isAuthed=function(){var e=this.getToken();if(e){var t=this.parseJwt(e),o=Math.round((new Date).getTime()/1e3)<=t.exp;return o||this.logout(),o}return!1},this.logout=function(){delete e.localStorage.jwtToken},this.getUser=function(){return this.parseJwt(this.getToken())}}]),app.factory("authInterceptor",["$q","$location","authService",function(e,t,o){return{request:function(e){return e.headers=e.headers||{},o.isAuthed()&&(e.headers.Authorization="Bearer "+o.getToken()),e},response:function(o){return 401===o.status&&t.path("/login"),o||e.when(o)},responseError:function(o){return 401===o.status?t.path("/login"):console.log(o),e.reject(o)}}}]);
//# sourceMappingURL=data:application/json;base64,
