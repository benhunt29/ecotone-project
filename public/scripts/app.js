var app=angular.module("ecotoneApp",["ngRoute","ngMaterial","ngMessages","validation.match"]);app.config(["$mdThemingProvider","$routeProvider","$locationProvider","$httpProvider",function(t,e,o,n){o.html5Mode(!0),t.theme("default").primaryPalette("green").accentPalette("blue-grey",{"default":"600"}).warnPalette("orange"),e.when("/",{templateUrl:"/views/calculator.html",controller:"calculateCtrl as ctrl"}).when("/login",{templateUrl:"/views/login.html",controller:""}).when("/register",{templateUrl:"/views/register.html",controller:"createAccountCtrl"}).when("/admin",{templateUrl:"/views/admin.html",controller:"adminCtrl as ctrl"}).when("/account",{templateUrl:"/views/account.html",controller:""}).when("/dashboard",{templateUrl:"/views/dashboard.html",controller:"projectsCtrl"}).when("/projects",{templateUrl:"/views/project.html",controller:"projectsCtrl"}).when("/about",{templateUrl:"/views/about.html"}).when("/contact",{templateUrl:"/views/contact.html",controller:""}).when("/privacy",{templateUrl:"/views/privacy.html"}).when("/sources",{templateUrl:"/views/sources.html"}).otherwise({redirectTo:"/"})}]),app.controller("calculateCtrl",["$http","submitSuggestion",function(t,e){function o(t){console.log("Text changed to ",t)}function n(t){void 0==t&&(i.category="",i.subcategory="",i.warmId="",i.weight="",i.conversion="",i.result="")}function r(){var e={warmId:i.warmId||i.category.secondaries[0].warm_id,weight:parseFloat(i.weight)*i.conversion};t.post("/calculations",e).then(function(t){i.result=Math.floor(1e3*Math.abs(t.data))/1e3})}function a(t){return t?i.list.filter(l(t)):i.list}function l(t){var e=t.toLowerCase();return function(t){return-1!=t.primary_cat.indexOf(e)}}function c(t){console.log(t),e(t)}t.get("/materials").then(function(t){var e=t.data;e.forEach(function(t){t.primary_cat=t.primary_cat.toLowerCase()}),i.list=e});var i=this;i.list="",i.result="",i.querySearch=a,i.selectedItemChange=n,i.searchTextChange=o,i.newSuggestion=c,i.units=[{name:"lbs",conversion:5e-4},{name:"kilos",conversion:.00110231},{name:"tons",conversion:1},{name:"metric tons",conversion:1.10231}],i.newCalculation=r}]),app.controller("adminCtrl",["$http",function(t){function e(e){var n=e.id;console.log(n),t.put("/suggestions/complete/"+n).then(function(t){o()})}function o(){t.get("/suggestions").then(function(t){var e=t.data;console.log(e),n.suggestions=e})}o();var n=this;n.suggestions="",n.markComplete=e}]),app.controller("loginCtrl",["$scope","$http","authService",function(t,e,o){t.login=function(){e({method:"POST",url:"/login",data:t.user}).then(function(t){o.saveToken(t.data.token)})}}]),app.controller("createAccountCtrl",["$scope","$http",function(t,e){t.user={},t.processForm=function(o){console.log("Posting..."),e({method:"POST",url:"/register",data:t.user,dataType:"json"}).then(function(t){console.log(t),alert("Your account has been created.")})}}]),app.controller("projectsCtrl",["$scope","$http",function(t,e){e.get("/project").then(function(e){console.log(e),t.projectList=e.data}),e({method:"GET",url:"http://www.w3schools.com/angular/customers.php"}).then(function(e){t.names=e.records})}]),app.service("authService",["$window",function(t){this.parseJwt=function(e){if(e){var o=e.split(".")[1],n=o.replace("-","+").replace("_","/");return JSON.parse(t.atob(n))}return{}},this.saveToken=function(e){t.localStorage.jwtToken=e,console.log("Saved token:",t.localStorage.jwtToken)},this.getToken=function(){return t.localStorage.jwtToken},this.isAuthed=function(){var t=this.getToken();if(t){var e=this.parseJwt(t),o=Math.round((new Date).getTime()/1e3)<=e.exp;return o||this.logout(),o}return!1},this.logout=function(){delete t.localStorage.jwtToken},this.getUser=function(){return this.parseJwt(this.getToken())}}]),app.factory("authInterceptor",["$q","$location","authService",function(t,e,o){return{request:function(t){return t.headers=t.headers||{},o.isAuthed()&&(t.headers.Authorization="Bearer "+o.getToken()),t},response:function(o){return 401===o.status&&e.path("/login"),o||t.when(o)},responseError:function(o){return 401===o.status?e.path("/login"):console.log(o),t.reject(o)}}}]),app.factory("submitSuggestion",["$mdDialog",function(t){return function(e){console.log(e);var o=t.confirm().title("Submit New Material").content("Are you sure you want to submit "+e).ariaLabel("Submit Material").ok("Submit").cancel("Cancel");return t.show(o)}}]);
//# sourceMappingURL=data:application/json;base64,
