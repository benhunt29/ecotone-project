var app=angular.module("ecotoneApp",["ngRoute","ngMaterial","ngMessages"]);app.config(["$mdThemingProvider","$routeProvider","$locationProvider","$httpProvider",function(e,t,r,o){r.html5Mode(!0),e.theme("default").primaryPalette("green").accentPalette("blue").warnPalette("orange"),t.when("/",{templateUrl:"/views/calculator.html",controller:"calculateCtrl"}).when("/login",{templateUrl:"/views/login.html",controller:""}).when("/register",{templateUrl:"/views/register.html",controller:"createAccountCtrl"}).when("/account",{templateUrl:"/views/account.html",controller:""}).when("/dashboard",{templateUrl:"/views/dashboard.html",controller:"projectsCtrl"}).when("/projects",{templateUrl:"/views/project.html",controller:"projectsCtrl"}).when("/about",{templateUrl:"/views/about.html"}).when("/contact",{templateUrl:"/views/contact.html",controller:""}).when("/privacy",{templateUrl:"/views/privacy.html"}).otherwise({redirectTo:"/"})}]),app.controller("calculateCtrl",["$scope","$http",function(e,t){function r(e){var t=angular.lowercase(e);return function(e){return-1!=e.primary_cat.indexOf(t)}}e.newCalculation=function(){console.log(e.selected)},e.querySearch=function(t){return console.log(e.list.filter(r(t))),t?e.list.filter(r(t)):e.list}}]),app.controller("loginCtrl",["$scope","$http","authService",function(e,t,r){e.login=function(){t({method:"POST",url:"/login",data:e.user}).then(function(e){r.saveToken(e.data.token)})}}]),app.controller("createAccountCtrl",["$scope","$http",function(e,t){e.user={},e.processForm=function(r){console.log("Posting..."),t({method:"POST",url:"/register",data:e.user,dataType:"json"}).then(function(e){console.log(e),alert("Your account has been created.")})}}]),app.controller("projectsCtrl",["$scope","$http",function(e,t){t({method:"POST",url:"http://www.w3schools.com/angular/customers.php"}).then(function(t){e.names=t.records})}]),app.service("authService",["$window",function(e){this.parseJwt=function(t){if(t){var r=t.split(".")[1],o=r.replace("-","+").replace("_","/");return JSON.parse(e.atob(o))}return{}},this.saveToken=function(t){e.localStorage.jwtToken=t,console.log("Saved token:",e.localStorage.jwtToken)},this.getToken=function(){return e.localStorage.jwtToken},this.isAuthed=function(){var e=this.getToken();if(e){var t=this.parseJwt(e),r=Math.round((new Date).getTime()/1e3)<=t.exp;return r||this.logout(),r}return!1},this.logout=function(){delete e.localStorage.jwtToken},this.getUser=function(){return this.parseJwt(this.getToken())}}]),app.factory("authInterceptor",["$q","$location","authService",function(e,t,r){return{request:function(e){return e.headers=e.headers||{},r.isAuthed()&&(e.headers.Authorization="Bearer "+r.getToken()),e},response:function(r){return 401===r.status&&t.path("/login"),r||e.when(r)},responseError:function(r){return 401===r.status?t.path("/login"):console.log(r),e.reject(r)}}}]);
//# sourceMappingURL=data:application/json;base64,
