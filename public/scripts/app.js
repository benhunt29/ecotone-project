var app=angular.module("ecotoneApp",["ngRoute","ngMaterial","ngMessages","validation.match"]);app.config(["$mdThemingProvider","$routeProvider","$locationProvider","$httpProvider",function(t,e,o,n){o.html5Mode(!0),t.theme("default").primaryPalette("green").accentPalette("blue-grey",{"default":"600"}).warnPalette("orange"),e.when("/",{templateUrl:"/views/calculator.html",controller:"calculateCtrl as ctrl"}).when("/login",{templateUrl:"/views/login.html",controller:"loginCtrl"}).when("/register",{templateUrl:"/views/register.html",controller:"createAccountCtrl"}).when("/admin",{templateUrl:"/views/admin.html",controller:"adminCtrl as ctrl"}).when("/account",{templateUrl:"/views/account.html",controller:""}).when("/dashboard",{templateUrl:"/views/dashboard.html",controller:"projectsCtrl"}).when("/projects",{templateUrl:"/views/project.html",controller:"projectsCtrl"}).when("/about",{templateUrl:"/views/about.html"}).when("/contact",{templateUrl:"/views/contact.html",controller:""}).when("/privacy",{templateUrl:"/views/privacy.html"}).when("/sources",{templateUrl:"/views/sources.html"}).otherwise({redirectTo:"/"})}]),app.controller("calculateCtrl",["$http","$mdDialog",function(t,e){function o(t){console.log("Text changed to ",t)}function n(t){void 0==t&&(s.category="",s.subcategory="",s.warmId="",s.weight="",s.conversion="",s.result="")}function r(){var e={warmId:s.warmId||s.category.secondaries[0].warm_id,weight:parseFloat(s.weight)*s.conversion};t.post("/calculations",e).then(function(t){s.result=Math.floor(1e3*Math.abs(t.data))/1e3})}function l(t){return t?s.list.filter(a(t)):s.list}function a(t){var e=t.toLowerCase();return function(t){return-1!=t.primary_cat.indexOf(e)}}function c(){console.log("SUBMIT!"),console.log(s.submission),t.post("/suggestion",s.submission).then(function(t){e.hide()})}function i(t){console.log("NEW SUGGESTION!",s.searchText),e.show({templateUrl:"/views/submit-modal.html",clickOutsideToClose:!0,controller:"calculateCtrl",controllerAs:"ctrl",locals:{material:s.searchText}})}t.get("/materials").then(function(t){var e=t.data;e.forEach(function(t){t.primary_cat=t.primary_cat.toLowerCase()}),s.list=e});var s=this;s.list="",s.result="",s.querySearch=l,s.selectedItemChange=n,s.searchTextChange=o,s.newSuggestion=i,s.submitSuggestion=c,s.units=[{name:"lbs",conversion:5e-4},{name:"kilos",conversion:.00110231},{name:"tons",conversion:1},{name:"metric tons",conversion:1.10231}],s.submission={email:"",material:"",notes:""},s.newCalculation=r}]),app.controller("adminCtrl",["$http",function(t){function e(e){var n=e.id;console.log(n),t.put("/suggestion/complete/"+n).then(function(t){o()})}function o(){t.get("/suggestion").then(function(t){var e=t.data;console.log(e),n.suggestions=e})}o();var n=this;n.suggestions="",n.markComplete=e}]),app.controller("createAccountCtrl",["$scope","$http","$location",function(t,e,o){t.user={},t.processForm=function(n){console.log("Posting..."),e({method:"POST",url:"/register",data:t.user,dataType:"json"}).then(function(t){console.log(t),o.path("/login"),alert("Your account has been created.")})}}]),app.controller("loginCtrl",["$scope","$http","authService","$location","$rootScope",function(t,e,o,n,r){t.login=function(){e({method:"POST",url:"/login",data:t.form}).then(function(t){o.saveToken(t.data.token),r.user=o.getUser(),n.path("/")})}}]),app.controller("navCtrl",["authService","$scope","$rootScope","$location","$http",function(t,e,o,n,r){o.user=t.getUser(),o.user&&o.user.username&&n.path("/"),e.logout=function(){t.logout(),o.user=t.getUser(),n.path("/")}}]),app.controller("projectsCtrl",["$scope","$http",function(t,e){e.get("/project").then(function(e){console.log(e),t.projectList=e.data}),t.deleteProjectItem=function(o){console.log("Deleting...",t.projectlist.lineID),e.update("/project").then(function(t){console.log("Item was deleted.",t)})}}]),app.controller("dashboardCtrl",["$scope","$http",function(t,e){e.get("/project").then(function(e){console.log(e),t.projectList=e.data})}]),app.service("authService",["$window",function(t){this.parseJwt=function(e){if(e){var o=e.split(".")[1],n=o.replace("-","+").replace("_","/");return JSON.parse(t.atob(n))}return{}},this.saveToken=function(e){t.localStorage.jwtToken=e,console.log("Saved token:",t.localStorage.jwtToken)},this.getToken=function(){return t.localStorage.jwtToken},this.isAuthed=function(){var t=this.getToken();if(t){var e=this.parseJwt(t),o=Math.round((new Date).getTime()/1e3)<=e.exp;return o||this.logout(),o}return!1},this.logout=function(){delete t.localStorage.jwtToken},this.getUser=function(){return this.parseJwt(this.getToken())}}]),app.factory("authInterceptor",["$q","$location","authService",function(t,e,o){return{request:function(t){return t.headers=t.headers||{},o.isAuthed()&&(t.headers.Authorization="Bearer "+o.getToken()),t},response:function(o){return 401===o.status&&e.path("/login"),o||t.when(o)},responseError:function(o){return 401===o.status?e.path("/login"):console.log(o),t.reject(o)}}}]);
//# sourceMappingURL=data:application/json;base64,
