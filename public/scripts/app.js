var app=angular.module("ecotoneApp",["ngRoute","ngMaterial","ngMessages","validation.match"]);app.config(["$mdThemingProvider","$routeProvider","$locationProvider","$httpProvider",function(e,t,n,r){n.html5Mode(!0),e.theme("default").primaryPalette("green").accentPalette("blue-grey",{"default":"600"}).warnPalette("orange"),t.when("/",{templateUrl:"/views/calculator.html",controller:"calculateCtrl as ctrl"}).when("/login",{templateUrl:"/views/login.html",controller:"loginCtrl"}).when("/register",{templateUrl:"/views/register.html",controller:"createAccountCtrl"}).when("/admin",{templateUrl:"/views/admin.html",controller:"adminCtrl as ctrl"}).when("/account",{templateUrl:"/views/account.html",controller:""}).when("/dashboard",{templateUrl:"/views/dashboard.html",controller:"dashboardCtrl"}).when("/projects",{templateUrl:"/views/project.html",controller:"projectsCtrl as ctrl"}).when("/about",{templateUrl:"/views/about.html"}).when("/contact",{templateUrl:"/views/contact.html",controller:""}).when("/privacy",{templateUrl:"/views/privacy.html"}).when("/sources",{templateUrl:"/views/sources.html"}).otherwise({redirectTo:"/"})}]),app.controller("adminCtrl",["$http","$scope","$parse",function(e,t,n){function r(t){var n=t.id;console.log(n),e.put("/suggestion/complete/"+n).then(function(e){o()})}function o(){e.get("/suggestion").then(function(e){var t=e.data;console.log(t),a.suggestions=t})}o();var a=this;a.suggestions="",a.markComplete=r,t.csv={content:null,header:!0,headerVisible:!0,separator:",",separatorVisible:!0,result:null,encoding:"ISO-8859-1",encodingVisible:!0};var l="";t.toPrettyJSON=function(e,t){var r=JSON.stringify(e),o=null;try{o=n(r)({})}catch(a){return l}var i=JSON.stringify(o,null,Number(t));return l=i,i}}]),app.controller("calculateCtrl",["$http","$mdDialog","$rootScope","authService","$location",function(e,t,n,r,o){function a(e){console.log("Text changed to ",e)}function l(e){void 0==e&&(h.category="",h.subcategory="",h.warmId="",h.weight="",h.conversion="",h.result="")}function i(){var t={warmId:h.warmId||h.category.secondaries[0].warm_id,weight:parseFloat(h.weight)*h.conversion};e.post("/calculations",t).then(function(e){h.result=Math.floor(1e3*Math.abs(e.data))/1e3})}function s(e){return e?h.list.filter(c(e)):h.list}function c(e){var t=e.toLowerCase();return function(e){return-1!=e.primary_cat.indexOf(t)}}function u(){e.post("/suggestion",h.submission).then(function(e){t.hide()})}function p(e){document.getElementById("sidenav").focus(),t.show({templateUrl:"/views/submit-modal.html",clickOutsideToClose:!0,controller:"calculateCtrl",controllerAs:"ctrl",locals:{material:h.searchText}})}n.user=r.getUser(),n.user&&n.user.username&&o.path("/"),e.get("/materials").then(function(e){var t=e.data;t.forEach(function(e){e.primary_cat=e.primary_cat.toLowerCase()}),h.list=t});var h=this;h.list="",h.isDisabled=!1,h.result="",h.querySearch=s,h.selectedItemChange=l,h.searchTextChange=a,h.newSuggestion=p,h.submitSuggestion=u,h.units=[{name:"lbs",conversion:5e-4},{name:"kilos",conversion:.00110231},{name:"tons",conversion:1},{name:"metric tons",conversion:1.10231}],h.submission={email:"",material:"",notes:""},h.newCalculation=i}]),app.controller("createAccountCtrl",["$scope","$http","$location",function(e,t,n){e.user={},e.processForm=function(r){console.log("Posting..."),t({method:"POST",url:"/register",data:e.user,dataType:"json"}).then(function(e){console.log(e),n.path("/login"),alert("Your account has been created.")})}}]),app.directive("ngCsvImport",function(){return{restrict:"E",transclude:!0,replace:!0,scope:{content:"=?",header:"=?",headerVisible:"=?",separator:"=?",separatorVisible:"=?",result:"=?",encoding:"=?",encodingVisible:"=?"},template:'<div><div ng-show="headerVisible"><div class="label">Header</div><input type="checkbox" ng-model="header"></div><div ng-show="encoding && encodingVisible"><div class="label">Encoding</div><span>{{encoding}}</span></div><div ng-show="separator && separatorVisible"><div class="label">Seperator</div><span><input class="separator-input" type="text" ng-change="changeSeparator" ng-model="separator"><span></div><div><input class="btn cta gray" type="file"/></div></div>',link:function(e,t){e.separatorVisible=e.separatorVisible||!1,e.headerVisible=e.headerVisible||!1,angular.element(t[0].querySelector(".separator-input")).on("keyup",function(t){if(null!=e.content){var r={csv:e.content,header:e.header,separator:t.target.value,encoding:e.encoding};e.result=n(r),e.$apply()}}),t.on("change",function(t){var r=new FileReader;if(e.filename=t.target.files[0].name,r.onload=function(t){e.$apply(function(){var r={csv:t.target.result.replace(/\r\n|\r/g,"\n"),header:e.header,separator:e.separator};e.content=r.csv,e.result=n(r),e.result.filename=e.filename})},"file"!==t.target.type||null==t.target.files&&null==t.srcElement.files){if(null!=e.content){var o={csv:e.content,header:!e.header,separator:e.separator};e.result=n(o)}}else r.readAsText((t.srcElement||t.target).files[0],e.encoding)});var n=function(e){var t=e.csv.split("\n"),n=[],r=0,o=t[0].split(e.separator).length,a=[];e.header&&(a=t[0].split(e.separator),r=1);for(var l=r;l<t.length;l++){var i={},s=t[l].split(new RegExp(e.separator+'(?![^"]*"(?:(?:[^"]*"){2})*[^"]*$)'));if(s.length===o){if(e.header)for(var c=0;c<a.length;c++)i[a[c]]=s[c];else for(var u=0;u<s.length;u++)i[u]=s[u];n.push(i)}}return n}}}}),app.controller("dashboardCtrl",["$mdDialog","$scope","$http",function(e,t,n){n.get("/project").then(function(e){console.log(e),t.projectList=e.data}),t.showDelete=function(n){console.log("CLICK");var r=e.confirm().title("Are you sure you want to delete your project?").content("This is permanent.").ariaLabel("Delete project permanently").ok("Delete").cancel("Cancel").targetEvent(n);e.show(r).then(function(){t.alert="Your project has been deleted."},function(){t.alert="Your project has not been deleted."})}}]),app.controller("loginCtrl",["$scope","$http","authService","$location","$rootScope",function(e,t,n,r,o){e.login=function(){t({method:"POST",url:"/login",data:e.form}).then(function(e){n.saveToken(e.data.token),o.user=n.getUser(),r.path("/")})}}]),app.controller("navCtrl",["authService","$scope","$rootScope","$location","$http",function(e,t,n,r,o){n.user=e.getUser(),n.user&&n.user.username&&r.path("/"),t.logout=function(){e.logout(),n.user=e.getUser(),r.path("/")}}]),app.controller("projectsCtrl",["$scope","$http",function(e,t){function n(e){return e?i.projectList.filter(r(e)):i.projectList}function r(e){var t=e.toLowerCase();return function(e){return-1!=e.primary_cat.indexOf(t)}}function o(e){console.log("Text changed to ",e)}function a(e){void 0==e&&(i.project_name="",i.project_description="")}function l(){console.log("Deleting...",i.projectList.ID)}var i=this;i.projectList="",i.result="",i.querySearch=n,i.selectedItemChange=a,i.searchTextChange=o,i.projectTotal=0,i.deleteProjectItem=l,i.id=0,i.getProjectList=function(){t.get("/project",userid).then(function(e){console.log(e);var t=e.data;t.forEach(function(e){e.project_name=e.project_name.toLowerCase()}),i.projectList=t})},e.showDelete=function(t){console.log("CLICK");var n=$mdDialog.confirm().title("Are you sure you want to delete this item?").content("This will be permanent.").ariaLabel("Delete item permanently").ok("Delete").cancel("Cancel").targetEvent(t);$mdDialog.show(n).then(function(){e.alert="Your item has been deleted."},function(){e.alert="Your item has not been deleted."})}}]),app.service("authService",["$window",function(e){this.parseJwt=function(t){if(t){var n=t.split(".")[1],r=n.replace("-","+").replace("_","/");return JSON.parse(e.atob(r))}return{}},this.saveToken=function(t){e.localStorage.jwtToken=t,console.log("Saved token:",e.localStorage.jwtToken)},this.getToken=function(){return e.localStorage.jwtToken},this.isAuthed=function(){var e=this.getToken();if(e){var t=this.parseJwt(e),n=Math.round((new Date).getTime()/1e3)<=t.exp;return n||this.logout(),n}return!1},this.logout=function(){delete e.localStorage.jwtToken},this.getUser=function(){return this.parseJwt(this.getToken())}}]),app.factory("authInterceptor",["$q","$location","authService",function(e,t,n){return{request:function(e){return e.headers=e.headers||{},n.isAuthed()&&(e.headers.Authorization="Bearer "+n.getToken()),e},response:function(n){return 401===n.status&&t.path("/login"),n||e.when(n)},responseError:function(n){return 401===n.status?t.path("/login"):console.log(n),e.reject(n)}}}]);
//# sourceMappingURL=data:application/json;base64,
