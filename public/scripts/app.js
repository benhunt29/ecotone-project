var app=angular.module("ecotoneApp",["ngRoute","ngMaterial","ngMessages"]);app.config(["$mdThemingProvider","$routeProvider","$locationProvider","$httpProvider",function(t,e,o,r){o.html5Mode(!0),t.theme("default").primaryPalette("green").accentPalette("blue-grey",{"default":"600"}).warnPalette("orange"),e.when("/",{templateUrl:"/views/calculator.html",controller:"calculateCtrl as ctrl"}).when("/login",{templateUrl:"/views/login.html",controller:""}).when("/register",{templateUrl:"/views/register.html",controller:"createAccountCtrl"}).when("/admin",{templateUrl:"/views/admin.html",controller:"adminCtrl as ctrl"}).when("/account",{templateUrl:"/views/account.html",controller:""}).when("/dashboard",{templateUrl:"/views/dashboard.html",controller:"projectsCtrl"}).when("/projects",{templateUrl:"/views/project.html",controller:"projectsCtrl"}).when("/about",{templateUrl:"/views/about.html"}).when("/contact",{templateUrl:"/views/contact.html",controller:""}).when("/privacy",{templateUrl:"/views/privacy.html"}).when("/sources",{templateUrl:"/views/sources.html"}).otherwise({redirectTo:"/"})}]),app.controller("calculateCtrl",["$http",function(t){function e(t){console.log("Text changed to ",t)}function o(t){void 0==t&&(l.category="",l.subcategory="",l.warmId="",l.weight="",l.conversion="",l.result="")}function r(){var e={warmId:l.warmId||l.category.secondaries[0].warm_id,weight:parseFloat(l.weight)*l.conversion};t.post("/calculations",e).then(function(t){l.result=Math.floor(1e3*Math.abs(t.data))/1e3})}function n(t){return t?l.list.filter(a(t)):l.list}function a(t){var e=t.toLowerCase();return function(t){return-1!=t.primary_cat.indexOf(e)}}t.get("/materials").then(function(t){var e=t.data;e.forEach(function(t){t.primary_cat=t.primary_cat.toLowerCase()}),l.list=e});var l=this;l.list="",l.result="",l.querySearch=n,l.selectedItemChange=o,l.searchTextChange=e,l.units=[{name:"lbs",conversion:5e-4},{name:"kilos",conversion:.00110231},{name:"tons",conversion:1},{name:"metric tons",conversion:1.10231}],l.newCalculation=r}]),app.controller("adminCtrl",["$http",function(t){t.get("/suggestions").then(function(t){var o=t.data;console.log(o),e.suggestions=o});var e=this;e.suggestions=""}]),app.controller("loginCtrl",["$scope","$http","authService",function(t,e,o){t.login=function(){e({method:"POST",url:"/login",data:t.user}).then(function(t){o.saveToken(t.data.token)})}}]),app.controller("createAccountCtrl",["$scope","$http",function(t,e){t.user={},t.processForm=function(o){console.log("Posting..."),e({method:"POST",url:"/register",data:t.user,dataType:"json"}).then(function(t){console.log(t),alert("Your account has been created.")})}}]),app.controller("projectsCtrl",["$scope","$http",function(t,e){e.get("/project").then(function(e){console.log(e),t.projectList=e.data})}]),app.service("authService",["$window",function(t){this.parseJwt=function(e){if(e){var o=e.split(".")[1],r=o.replace("-","+").replace("_","/");return JSON.parse(t.atob(r))}return{}},this.saveToken=function(e){t.localStorage.jwtToken=e,console.log("Saved token:",t.localStorage.jwtToken)},this.getToken=function(){return t.localStorage.jwtToken},this.isAuthed=function(){var t=this.getToken();if(t){var e=this.parseJwt(t),o=Math.round((new Date).getTime()/1e3)<=e.exp;return o||this.logout(),o}return!1},this.logout=function(){delete t.localStorage.jwtToken},this.getUser=function(){return this.parseJwt(this.getToken())}}]),app.factory("authInterceptor",["$q","$location","authService",function(t,e,o){return{request:function(t){return t.headers=t.headers||{},o.isAuthed()&&(t.headers.Authorization="Bearer "+o.getToken()),t},response:function(o){return 401===o.status&&e.path("/login"),o||t.when(o)},responseError:function(o){return 401===o.status?e.path("/login"):console.log(o),t.reject(o)}}}]);
//# sourceMappingURL=data:application/json;base64,
