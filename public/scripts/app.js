var app=angular.module("ecotoneApp",["ngRoute","ngMaterial","ngMessages","validation.match"]);app.config(["$mdThemingProvider","$routeProvider","$locationProvider","$httpProvider",function(e,t,o,n){o.html5Mode(!0),e.theme("default").primaryPalette("green").accentPalette("blue-grey",{"default":"600"}).warnPalette("orange"),t.when("/",{templateUrl:"/views/calculator.html",controller:"calculateCtrl as ctrl"}).when("/login",{templateUrl:"/views/login.html",controller:"loginCtrl"}).when("/register",{templateUrl:"/views/register.html",controller:"createAccountCtrl"}).when("/admin",{templateUrl:"/views/admin.html",controller:"adminCtrl as ctrl"}).when("/account",{templateUrl:"/views/account.html",controller:""}).when("/dashboard",{templateUrl:"/views/dashboard.html",controller:"dashboardCtrl"}).when("/projects",{templateUrl:"/views/project.html",controller:"projectsCtrl as ctrl"}).when("/about",{templateUrl:"/views/about.html"}).when("/contact",{templateUrl:"/views/contact.html",controller:""}).when("/privacy",{templateUrl:"/views/privacy.html"}).when("/sources",{templateUrl:"/views/sources.html"}).otherwise({redirectTo:"/"})}]),app.controller("adminCtrl",["$http","$scope","$parse",function(e,t,o){function n(t){var o=t.id;console.log(o),e.put("/suggestion/complete/"+o).then(function(e){r()})}function r(){e.get("/suggestion").then(function(e){var t=e.data;console.log(t),a.suggestions=t})}r();var a=this;a.suggestions="",a.markComplete=n,t.csv={content:null,header:!0,headerVisible:!0,separator:",",separatorVisible:!0,result:null,encoding:"ISO-8859-1",encodingVisible:!0};var i="";t.toPrettyJSON=function(e,t){var n=JSON.stringify(e),r=null;try{r=o(n)({})}catch(a){return i}var l=JSON.stringify(r,null,Number(t));return i=l,l}}]),app.controller("adminCtrl",["$http",function(e){function t(t){var n=t.id;console.log(n),e.put("/suggestion/complete/"+n).then(function(e){o()})}function o(){e.get("/suggestion").then(function(e){var t=e.data;console.log(t),n.suggestions=t})}o();var n=this;n.suggestions="",n.markComplete=t}]),app.controller("calculateCtrl",["$http","$mdDialog","$rootScope","authService","$location",function(e,t,o,n,r){function a(e){console.log("Text changed to ",e)}function i(e){void 0==e&&(d.category="",d.subcategory="",d.warmId="",d.weight="",d.conversion="",d.result="")}function l(){var t={warmId:d.warmId||d.category.secondaries[0].warm_id,weight:parseFloat(d.weight)*d.conversion};e.post("/calculations",t).then(function(e){d.result=Math.floor(1e3*Math.abs(e.data))/1e3})}function s(e){return e?d.list.filter(c(e)):d.list}function c(e){var t=e.toLowerCase();return function(e){return-1!=e.primary_cat.indexOf(t)}}function u(){e.post("/suggestion",d.submission).then(function(e){t.hide()})}function p(e){document.getElementById("sidenav").focus(),t.show({templateUrl:"/views/submit-modal.html",clickOutsideToClose:!0,controller:"calculateCtrl",controllerAs:"ctrl",locals:{material:d.searchText}})}o.user=n.getUser(),o.user&&o.user.username&&r.path("/"),e.get("/materials").then(function(e){var t=e.data;t.forEach(function(e){e.primary_cat=e.primary_cat.toLowerCase()}),d.list=t});var d=this;d.list="",d.isDisabled=!1,d.result="",d.querySearch=s,d.selectedItemChange=i,d.searchTextChange=a,d.newSuggestion=p,d.submitSuggestion=u,d.units=[{name:"lbs",conversion:5e-4},{name:"kilos",conversion:.00110231},{name:"tons",conversion:1},{name:"metric tons",conversion:1.10231}],d.submission={email:"",material:"",notes:""},d.newCalculation=l}]),app.controller("createAccountCtrl",["$scope","$http","$location",function(e,t,o){e.user={},e.processForm=function(n){console.log("Posting..."),t({method:"POST",url:"/register",data:e.user,dataType:"json"}).then(function(e){console.log(e),o.path("/login"),alert("Your account has been created.")})}}]),app.directive("ngCsvImport",function(){return{restrict:"E",transclude:!0,replace:!0,scope:{content:"=?",header:"=?",headerVisible:"=?",separator:"=?",separatorVisible:"=?",result:"=?",encoding:"=?",encodingVisible:"=?"},template:'<div><div ng-show="headerVisible"><div class="label">Header</div><input type="checkbox" ng-model="header"></div><div ng-show="encoding && encodingVisible"><div class="label">Encoding</div><span>{{encoding}}</span></div><div ng-show="separator && separatorVisible"><div class="label">Seperator</div><span><input class="separator-input" type="text" ng-change="changeSeparator" ng-model="separator"><span></div><div><input class="btn cta gray" type="file"/></div></div>',link:function(e,t){e.separatorVisible=e.separatorVisible||!1,e.headerVisible=e.headerVisible||!1,angular.element(t[0].querySelector(".separator-input")).on("keyup",function(t){if(null!=e.content){var n={csv:e.content,header:e.header,separator:t.target.value,encoding:e.encoding};e.result=o(n),e.$apply()}}),t.on("change",function(t){var n=new FileReader;if(e.filename=t.target.files[0].name,n.onload=function(t){e.$apply(function(){var n={csv:t.target.result.replace(/\r\n|\r/g,"\n"),header:e.header,separator:e.separator};e.content=n.csv,e.result=o(n),e.result.filename=e.filename})},"file"!==t.target.type||null==t.target.files&&null==t.srcElement.files){if(null!=e.content){var r={csv:e.content,header:!e.header,separator:e.separator};e.result=o(r)}}else n.readAsText((t.srcElement||t.target).files[0],e.encoding)});var o=function(e){var t=e.csv.split("\n"),o=[],n=0,r=t[0].split(e.separator).length,a=[];e.header&&(a=t[0].split(e.separator),n=1);for(var i=n;i<t.length;i++){var l={},s=t[i].split(new RegExp(e.separator+'(?![^"]*"(?:(?:[^"]*"){2})*[^"]*$)'));if(s.length===r){if(e.header)for(var c=0;c<a.length;c++)l[a[c]]=s[c];else for(var u=0;u<s.length;u++)l[u]=s[u];o.push(l)}}return o}}}}),app.controller("dashboardCtrl",["$mdDialog","$scope","$http",function(e,t,o){o.get("/project").then(function(e){console.log(e),t.projectList=e.data}),t.showDelete=function(o){console.log("CLICK");var n=e.confirm().title("Are you sure you want to delete your project?").content("This is permanent.").ariaLabel("Delete project permanently").ok("Delete").cancel("Cancel").targetEvent(o);e.show(n).then(function(){t.alert="Your project has been deleted."},function(){t.alert="Your project has not been deleted."})}}]),app.controller("loginCtrl",["$scope","$http","authService","$location","$rootScope",function(e,t,o,n,r){e.login=function(){t({method:"POST",url:"/login",data:e.form}).then(function(e){o.saveToken(e.data.token),r.user=o.getUser(),n.path("/")})}}]),app.controller("navCtrl",["authService","$scope","$rootScope","$location","$http",function(e,t,o,n,r){o.user=e.getUser(),o.user&&o.user.username&&n.path("/"),t.logout=function(){e.logout(),o.user=e.getUser(),n.path("/")}}]),app.controller("projectsCtrl",["$mdDialog","$scope","$rootScope","$http",function(e,t,o,n){function r(e){return console.log("This is the project list:"),console.log(c.projectList),e?c.projectList.filter(a(e)):c.projectList}function a(e){var t=e.toLowerCase();return function(e){return-1!=e.project_name.indexOf(t)}}function i(e){console.log("Text changed to ",e)}function l(e){void 0==e&&(c.project_name="",c.project_description="")}function s(){console.log("Deleting...",c.project_id)}var c=this;c.projectList=[{id:21,project_name:"Ben's House",project_description:"Remodel",created_at:"2015-10-14T16:42:40.896Z",updated_at:"2015-10-14T16:42:40.901Z",user_id:4,category:"wood",sub_category:"oak",units:"lbs",weight:10,co2_offset:.03,project_id:6,item_description:"porch spindles"},{id:202,project_name:"James' House",project_description:"Teardown",created_at:"2014-10-14T16:42:40.896Z",updated_at:"2014-10-14T16:42:40.901Z",user_id:24,category:"asphalt shingles",sub_category:"null",units:"lbs",weight:100,co2_offset:.303,project_id:6,item_description:"roof shingles"},{id:2112,project_name:"Kim's Barn",project_description:"Remodel",created_at:"2013-10-14T16:42:40.896Z",updated_at:"2013-10-14T16:42:40.901Z",user_id:14,category:"wood flooring",sub_category:"pine",units:"lbs",weight:500,co2_offset:3.03,project_id:6,item_description:"barn wood"}],c.result="",c.querySearch=r,c.selectedItemChange=l,c.searchTextChange=i,c.projectTotal=0,c.deleteProjectItem=s,c.id=0,console.log(c.projectList),t.showDelete=function(o){console.log("CLICK");var n=e.confirm().title("Are you sure you want to delete this item?").content("This will be permanent.").ariaLabel("Delete item permanently").ok("Delete").cancel("Cancel").targetEvent(o);e.show(n).then(function(){t.alert="Your item has been deleted."},function(){t.alert="Your item has not been deleted."})}}]),app.service("authService",["$window",function(e){this.parseJwt=function(t){if(t){var o=t.split(".")[1],n=o.replace("-","+").replace("_","/");return JSON.parse(e.atob(n))}return{}},this.saveToken=function(t){e.localStorage.jwtToken=t,console.log("Saved token:",e.localStorage.jwtToken)},this.getToken=function(){return e.localStorage.jwtToken},this.isAuthed=function(){var e=this.getToken();if(e){var t=this.parseJwt(e),o=Math.round((new Date).getTime()/1e3)<=t.exp;return o||this.logout(),o}return!1},this.logout=function(){delete e.localStorage.jwtToken},this.getUser=function(){return this.parseJwt(this.getToken())}}]),app.factory("authInterceptor",["$q","$location","authService",function(e,t,o){return{request:function(e){return e.headers=e.headers||{},o.isAuthed()&&(e.headers.Authorization="Bearer "+o.getToken()),e},response:function(o){return 401===o.status&&t.path("/login"),o||e.when(o)},responseError:function(o){return 401===o.status?t.path("/login"):console.log(o),e.reject(o)}}}]);
//# sourceMappingURL=data:application/json;base64,
