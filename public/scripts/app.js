var app=angular.module("ecotoneApp",["ngRoute","ngMaterial","ngMessages"]);app.config(["$mdThemingProvider","$routeProvider","$locationProvider","$httpProvider",function(e,t,r,o){r.html5Mode(!0),e.theme("default").primaryPalette("green").accentPalette("blue").warnPalette("orange"),t.when("/",{templateUrl:"/views/calculator.html",controller:"calculateCtrl"}).when("/login",{templateUrl:"/views/login.html",controller:""}).when("/register",{templateUrl:"/views/register.html",controller:"createAccountCtrl"}).when("/account",{templateUrl:"/views/account.html",controller:""}).when("/dashboard",{templateUrl:"/views/dashboard.html",controller:"projectsCtrl"}).when("/projects",{templateUrl:"/views/project.html",controller:"projectsCtrl"}).when("/about",{templateUrl:"/views/about.html"}).when("/contact",{templateUrl:"/views/contact.html",controller:""}).when("/privacy",{templateUrl:"/views/privacy.html"}).otherwise({redirectTo:"/"})}]),app.controller("calculateCtrl",["$scope","$http",function(e,t){function r(){t.get("/materials").then(function(t){var r=[];t.data.forEach(function(e){r.push(e.primary_cat)}),e.list=r})}function o(e){var t=angular.lowercase(e);return function(e){return console.log(e),-1!=e.category.indexOf(t)}}e.calculate={},e.list={},r(),e.querySearch=function(t){return console.log(e.list),t?e.list.filter(o(t)):e.list}}]),app.controller("createAccountCtrl",["$scope","$http",function(e,t){e.user={},e.processForm=function(r){console.log("Posting..."),t({method:"POST",url:"/newUser",data:e.user,dataType:"json"}).then(function(e){console.log(e),alert("Your account has been created.")})}}]),app.controller("projectsCtrl",["$scope","$http",function(e,t){t({method:"POST",url:"http://www.w3schools.com/angular/customers.php"}).then(function(t){e.names=t.records})}]),app.service("authService",["$window",function(e){this.parseJwt=function(t){if(t){var r=t.split(".")[1],o=r.replace("-","+").replace("_","/");return JSON.parse(e.atob(o))}return{}},this.saveToken=function(t){e.localStorage.jwtToken=t,console.log("Saved token:",e.localStorage.jwtToken)},this.getToken=function(){return e.localStorage.jwtToken},this.isAuthed=function(){var e=this.getToken();if(e){var t=this.parseJwt(e),r=Math.round((new Date).getTime()/1e3)<=t.exp;return r||this.logout(),r}return!1},this.logout=function(){delete e.localStorage.jwtToken},this.getUser=function(){return this.parseJwt(this.getToken())}}]),app.factory("authInterceptor",["$q","$location","authService",function(e,t,r){return{request:function(e){return e.headers=e.headers||{},r.isAuthed()&&(e.headers.Authorization="Bearer "+r.getToken()),e},response:function(r){return 401===r.status&&t.path("/login"),r||e.when(r)},responseError:function(r){return 401===r.status?t.path("/login"):console.log(r),e.reject(r)}}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMvYXBwLmpzIl0sIm5hbWVzIjpbImFwcCIsImFuZ3VsYXIiLCJtb2R1bGUiLCJjb25maWciLCIkbWRUaGVtaW5nUHJvdmlkZXIiLCIkcm91dGVQcm92aWRlciIsIiRsb2NhdGlvblByb3ZpZGVyIiwiJGh0dHBQcm92aWRlciIsImh0bWw1TW9kZSIsInRoZW1lIiwicHJpbWFyeVBhbGV0dGUiLCJhY2NlbnRQYWxldHRlIiwid2FyblBhbGV0dGUiLCJ3aGVuIiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyIiwib3RoZXJ3aXNlIiwicmVkaXJlY3RUbyIsIiRzY29wZSIsIiRodHRwIiwibG9hZENhdGVnb3JpZXMiLCJnZXQiLCJ0aGVuIiwicmVzcG9uc2UiLCJsaXN0IiwiZGF0YSIsImZvckVhY2giLCJpdGVtIiwicHVzaCIsInByaW1hcnlfY2F0IiwiY3JlYXRlRmlsdGVyRm9yIiwicXVlcnkiLCJsb3dlcmNhc2VRdWVyeSIsImxvd2VyY2FzZSIsIm9iaiIsImNvbnNvbGUiLCJsb2ciLCJjYXRlZ29yeSIsImluZGV4T2YiLCJjYWxjdWxhdGUiLCJxdWVyeVNlYXJjaCIsImZpbHRlciIsInVzZXIiLCJwcm9jZXNzRm9ybSIsIm1ldGhvZCIsInVybCIsImRhdGFUeXBlIiwiYWxlcnQiLCJuYW1lcyIsInJlY29yZHMiLCJzZXJ2aWNlIiwiJHdpbmRvdyIsInRoaXMiLCJwYXJzZUp3dCIsInRva2VuIiwiYmFzZTY0VXJsIiwic3BsaXQiLCJiYXNlNjQiLCJyZXBsYWNlIiwiSlNPTiIsInBhcnNlIiwiYXRvYiIsInNhdmVUb2tlbiIsImxvY2FsU3RvcmFnZSIsImp3dFRva2VuIiwiZ2V0VG9rZW4iLCJpc0F1dGhlZCIsInBhcmFtcyIsIm5vdEV4cGlyZWQiLCJNYXRoIiwicm91bmQiLCJEYXRlIiwiZ2V0VGltZSIsImV4cCIsImxvZ291dCIsImdldFVzZXIiLCJmYWN0b3J5IiwiJHEiLCIkbG9jYXRpb24iLCJhdXRoU2VydmljZSIsInJlcXVlc3QiLCJoZWFkZXJzIiwiQXV0aG9yaXphdGlvbiIsInN0YXR1cyIsInBhdGgiLCJyZXNwb25zZUVycm9yIiwicmVqZWN0Il0sIm1hcHBpbmdzIjoiQUFBQSxHQUFJQSxLQUFNQyxRQUFRQyxPQUFPLGNBQWUsVUFBVyxhQUFjLGNBRWpFRixLQUFJRyxRQUFRLHFCQUFzQixpQkFBa0Isb0JBQXFCLGdCQUFpQixTQUFTQyxFQUFvQkMsRUFBZ0JDLEVBQW1CQyxHQUN0SkQsRUFBa0JFLFdBQVUsR0FHNUJKLEVBQW1CSyxNQUFNLFdBQ3BCQyxlQUFlLFNBQ2ZDLGNBQWMsUUFDZEMsWUFBYSxVQUdsQlAsRUFBZVEsS0FBSyxLQUVaQyxZQUFhLHlCQUNiQyxXQUFZLGtCQUNiRixLQUFLLFVBRUpDLFlBQWEsb0JBQ2JDLFdBQVksS0FDYkYsS0FBSyxhQUVKQyxZQUFhLHVCQUNiQyxXQUFZLHNCQUNiRixLQUFLLFlBRUpDLFlBQWEsc0JBQ2JDLFdBQVksS0FDYkYsS0FBSyxjQUVKQyxZQUFhLHdCQUNiQyxXQUFZLGlCQUNiRixLQUFLLGFBRUpDLFlBQWEsc0JBQ2JDLFdBQVksaUJBQ2JGLEtBQUssVUFFSkMsWUFBYSxzQkFDZEQsS0FBSyxZQUVKQyxZQUFhLHNCQUNiQyxXQUFZLEtBQ2JGLEtBQUssWUFFSkMsWUFBYSx3QkFDZEUsV0FDQ0MsV0FBWSxTQU9wQmpCLElBQUllLFdBQVcsaUJBQWtCLFNBQVUsUUFBUyxTQUFTRyxFQUFRQyxHQWFqRSxRQUFTQyxLQUNMRCxFQUFNRSxJQUFJLGNBQWNDLEtBQUssU0FBU0MsR0FDbEMsR0FBSUMsS0FDSkQsR0FBU0UsS0FBS0MsUUFBUSxTQUFVQyxHQUM1QkgsRUFBS0ksS0FBTUQsRUFBS0UsZUFFcEJYLEVBQU9NLEtBQU9BLElBTXRCLFFBQVNNLEdBQWdCQyxHQUNyQixHQUFJQyxHQUFpQi9CLFFBQVFnQyxVQUFVRixFQUN2QyxPQUFPLFVBQWtCRyxHQUVyQixNQURBQyxTQUFRQyxJQUFJRixHQUNvQyxJQUF4Q0EsRUFBSUcsU0FBU0MsUUFBUU4sSUE1QnJDZCxFQUFPcUIsYUFDUHJCLEVBQU9NLFFBRVBKLElBSUFGLEVBQU9zQixZQUFZLFNBQVNULEdBRXhCLE1BREFJLFNBQVFDLElBQUlsQixFQUFPTSxNQUNaTyxFQUFRYixFQUFPTSxLQUFLaUIsT0FBT1gsRUFBZ0JDLElBQVViLEVBQU9NLFNBeUIvRXhCLElBQUllLFdBQVcscUJBQXNCLFNBQVUsUUFBUyxTQUFTRyxFQUFRQyxHQUNyRUQsRUFBT3dCLFFBRVB4QixFQUFPeUIsWUFBYyxTQUFVRCxHQUMzQlAsUUFBUUMsSUFBSSxjQUNaakIsR0FDSXlCLE9BQVEsT0FDUkMsSUFBSyxXQUNMcEIsS0FBTVAsRUFBT3dCLEtBQ2JJLFNBQVUsU0FDWHhCLEtBQUssU0FBVUMsR0FDZFksUUFBUUMsSUFBSWIsR0FDWndCLE1BQU0sd0NBTWxCL0MsSUFBSWUsV0FBVyxnQkFBaUIsU0FBVSxRQUFTLFNBQVNHLEVBQVFDLEdBQ2hFQSxHQUNJeUIsT0FBUSxPQUNSQyxJQUFLLG1EQUNOdkIsS0FBSyxTQUFVQyxHQUNkTCxFQUFPOEIsTUFBUXpCLEVBQVMwQixhQU9oQ2pELElBQUlrRCxRQUFRLGVBQWdCLFVBQVcsU0FBVUMsR0FDN0NDLEtBQUtDLFNBQVcsU0FBVUMsR0FDdEIsR0FBSUEsRUFBTyxDQUNQLEdBQUlDLEdBQVlELEVBQU1FLE1BQU0sS0FBSyxHQUM3QkMsRUFBU0YsRUFBVUcsUUFBUSxJQUFLLEtBQUtBLFFBQVEsSUFBSyxJQUN0RCxPQUFPQyxNQUFLQyxNQUFNVCxFQUFRVSxLQUFLSixJQUM1QixVQUdYTCxLQUFLVSxVQUFZLFNBQVVSLEdBQ3ZCSCxFQUFRWSxhQUFhQyxTQUFXVixFQUNoQ25CLFFBQVFDLElBQUksZUFBZWUsRUFBUVksYUFBYUMsV0FHcERaLEtBQUthLFNBQVcsV0FDWixNQUFPZCxHQUFRWSxhQUFhQyxVQUdoQ1osS0FBS2MsU0FBVyxXQUNaLEdBQUlaLEdBQVFGLEtBQUthLFVBQ2pCLElBQUlYLEVBQU8sQ0FDUCxHQUFJYSxHQUFTZixLQUFLQyxTQUFTQyxHQUN2QmMsRUFBYUMsS0FBS0MsT0FBTSxHQUFJQyxPQUFPQyxVQUFZLE1BQVNMLEVBQU9NLEdBSW5FLE9BSEtMLElBQ0RoQixLQUFLc0IsU0FFRk4sRUFFUCxPQUFPLEdBSWZoQixLQUFLc0IsT0FBUyxpQkFDSHZCLEdBQVFZLGFBQWFDLFVBSWhDWixLQUFLdUIsUUFBVSxXQUNYLE1BQU92QixNQUFLQyxTQUFTRCxLQUFLYSxnQkFJbENqRSxJQUFJNEUsUUFBUSxtQkFBb0IsS0FBTSxZQUFhLGNBQWUsU0FBVUMsRUFBSUMsRUFBV0MsR0FDdkYsT0FDSUMsUUFBUyxTQUFVN0UsR0FLZixNQUpBQSxHQUFPOEUsUUFBVTlFLEVBQU84RSxZQUNwQkYsRUFBWWIsYUFDWi9ELEVBQU84RSxRQUFRQyxjQUFnQixVQUFZSCxFQUFZZCxZQUVwRDlELEdBRVhvQixTQUFVLFNBQVVBLEdBT2hCLE1BTHdCLE9BQXBCQSxFQUFTNEQsUUFHVEwsRUFBVU0sS0FBSyxVQUVaN0QsR0FBWXNELEVBQUdoRSxLQUFLVSxJQUM1QjhELGNBQWUsU0FBVTlELEdBT3hCLE1BTndCLE9BQXBCQSxFQUFTNEQsT0FDVEwsRUFBVU0sS0FBSyxVQUdmakQsUUFBUUMsSUFBSWIsR0FFVHNELEVBQUdTLE9BQU8vRCIsImZpbGUiOiJzY3JpcHRzL2FwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZSgnZWNvdG9uZUFwcCcsIFsnbmdSb3V0ZScsICduZ01hdGVyaWFsJywgJ25nTWVzc2FnZXMnXSk7XG5cbmFwcC5jb25maWcoWyckbWRUaGVtaW5nUHJvdmlkZXInLCAnJHJvdXRlUHJvdmlkZXInLCAnJGxvY2F0aW9uUHJvdmlkZXInLCAnJGh0dHBQcm92aWRlcicsIGZ1bmN0aW9uKCRtZFRoZW1pbmdQcm92aWRlciwgJHJvdXRlUHJvdmlkZXIsICRsb2NhdGlvblByb3ZpZGVyLCAkaHR0cFByb3ZpZGVyKXtcbiAgICAkbG9jYXRpb25Qcm92aWRlci5odG1sNU1vZGUodHJ1ZSk7XG5cbiAgICAvL3NldCB0aGVtZSBhbmQgY29sb3IgcGFsZXR0ZVxuICAgICRtZFRoZW1pbmdQcm92aWRlci50aGVtZSgnZGVmYXVsdCcpXG4gICAgICAgIC5wcmltYXJ5UGFsZXR0ZSgnZ3JlZW4nKVxuICAgICAgICAuYWNjZW50UGFsZXR0ZSgnYmx1ZScpXG4gICAgICAgIC53YXJuUGFsZXR0ZSAoJ29yYW5nZScpO1xuXG4gICAgLy9yb3V0ZXMgZm9yIHZpZXdzXG4gICAgJHJvdXRlUHJvdmlkZXIud2hlbignLycsXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL2NhbGN1bGF0b3IuaHRtbCcsXG4gICAgICAgICAgICBjb250cm9sbGVyOiAnY2FsY3VsYXRlQ3RybCdcbiAgICAgICAgfSkud2hlbignL2xvZ2luJyxcbiAgICAgICAge1xuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvdmlld3MvbG9naW4uaHRtbCcsXG4gICAgICAgICAgICBjb250cm9sbGVyOiAnJ1xuICAgICAgICB9KS53aGVuKCcvcmVnaXN0ZXInLFxuICAgICAgICB7XG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9yZWdpc3Rlci5odG1sJyxcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdjcmVhdGVBY2NvdW50Q3RybCdcbiAgICAgICAgfSkud2hlbignL2FjY291bnQnLFxuICAgICAgICB7XG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9hY2NvdW50Lmh0bWwnLFxuICAgICAgICAgICAgY29udHJvbGxlcjogJydcbiAgICAgICAgfSkud2hlbignL2Rhc2hib2FyZCcsXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL2Rhc2hib2FyZC5odG1sJyxcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdwcm9qZWN0c0N0cmwnXG4gICAgICAgIH0pLndoZW4oJy9wcm9qZWN0cycsXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL3Byb2plY3QuaHRtbCcsXG4gICAgICAgICAgICBjb250cm9sbGVyOiAncHJvamVjdHNDdHJsJ1xuICAgICAgICB9KS53aGVuKCcvYWJvdXQnLFxuICAgICAgICB7XG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9hYm91dC5odG1sJ1xuICAgICAgICB9KS53aGVuKCcvY29udGFjdCcsXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL2NvbnRhY3QuaHRtbCcsXG4gICAgICAgICAgICBjb250cm9sbGVyOiAnJ1xuICAgICAgICB9KS53aGVuKCcvcHJpdmFjeScsXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL3ByaXZhY3kuaHRtbCdcbiAgICAgICAgfSkub3RoZXJ3aXNlKHtcbiAgICAgICAgICAgIHJlZGlyZWN0VG86ICcvJ1xuICAgICAgICB9KTtcblxuICAgIC8vJGh0dHBQcm92aWRlci5pbnRlcmNlcHRvcnMucHVzaCgnYXV0aEludGVyY2VwdG9yJyk7XG59XSk7XG5cbiAgICAvL00vL2Rlc2lnbmF0ZSBjb250cm9sbGVyXG4gICAgYXBwLmNvbnRyb2xsZXIoJ2NhbGN1bGF0ZUN0cmwnLCBbJyRzY29wZScsICckaHR0cCcsIGZ1bmN0aW9uKCRzY29wZSwgJGh0dHApIHtcbiAgICAgICAgJHNjb3BlLmNhbGN1bGF0ZSA9IHt9O1xuICAgICAgICAkc2NvcGUubGlzdCA9IHt9O1xuXG4gICAgICAgIGxvYWRDYXRlZ29yaWVzKCk7XG5cblxuLy9hdXRvY29tcGxldGUgZnVuY3Rpb25hbGl0eVxuICAgICAgICAkc2NvcGUucXVlcnlTZWFyY2g9ZnVuY3Rpb24ocXVlcnkpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCRzY29wZS5saXN0KTtcbiAgICAgICAgICAgIHJldHVybiBxdWVyeSA/ICRzY29wZS5saXN0LmZpbHRlcihjcmVhdGVGaWx0ZXJGb3IocXVlcnkpKSA6ICRzY29wZS5saXN0O1xuICAgICAgICB9O1xuXG4gICAgICAgIGZ1bmN0aW9uIGxvYWRDYXRlZ29yaWVzKCkge1xuICAgICAgICAgICAgJGh0dHAuZ2V0KCcvbWF0ZXJpYWxzJykudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIHZhciBsaXN0ID0gW107XG4gICAgICAgICAgICAgICAgcmVzcG9uc2UuZGF0YS5mb3JFYWNoKGZ1bmN0aW9uKCBpdGVtICl7XG4gICAgICAgICAgICAgICAgICAgIGxpc3QucHVzaCggaXRlbS5wcmltYXJ5X2NhdCApXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgJHNjb3BlLmxpc3QgPSBsaXN0O1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgfVxuXG4gICAgICAgIC8vQ3JlYXRlIGZpbHRlciBmdW5jdGlvbiBmb3IgYSBxdWVyeSBzdHJpbmdcbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlRmlsdGVyRm9yKHF1ZXJ5KSB7XG4gICAgICAgICAgICB2YXIgbG93ZXJjYXNlUXVlcnkgPSBhbmd1bGFyLmxvd2VyY2FzZShxdWVyeSk7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gZmlsdGVyRm4ob2JqKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cob2JqKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKG9iai5jYXRlZ29yeS5pbmRleE9mKGxvd2VyY2FzZVF1ZXJ5KSAhPSAtMSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfV0pO1xuXG4vLyBMb2dpbiBIVE1MIC0gTWFkZWxpbmVcbmFwcC5jb250cm9sbGVyKCdjcmVhdGVBY2NvdW50Q3RybCcsIFsnJHNjb3BlJywgJyRodHRwJywgZnVuY3Rpb24oJHNjb3BlLCAkaHR0cCkge1xuICAgICRzY29wZS51c2VyID0ge307XG5cbiAgICAkc2NvcGUucHJvY2Vzc0Zvcm0gPSBmdW5jdGlvbiAodXNlcikge1xuICAgICAgICBjb25zb2xlLmxvZyhcIlBvc3RpbmcuLi5cIik7XG4gICAgICAgICRodHRwKHtcbiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgdXJsOiAnL25ld1VzZXInLFxuICAgICAgICAgICAgZGF0YTogJHNjb3BlLnVzZXIsXG4gICAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nXG4gICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7XG4gICAgICAgICAgICBhbGVydChcIllvdXIgYWNjb3VudCBoYXMgYmVlbiBjcmVhdGVkLlwiKVxuICAgICAgICB9KVxuICAgIH07XG59XSk7XG5cbi8vIFByb2plY3QgSFRNTCAtIERhc2hib2FyZCBIVE1MIC0gS2ltXG5hcHAuY29udHJvbGxlcigncHJvamVjdHNDdHJsJywgWyckc2NvcGUnLCAnJGh0dHAnLCBmdW5jdGlvbigkc2NvcGUsICRodHRwKSB7XG4gICAgJGh0dHAoe1xuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgdXJsOiAnaHR0cDovL3d3dy53M3NjaG9vbHMuY29tL2FuZ3VsYXIvY3VzdG9tZXJzLnBocCdcbiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAkc2NvcGUubmFtZXMgPSByZXNwb25zZS5yZWNvcmRzO1xuICAgIH0pO1xuXG5cbn1dKTtcblxuLy8gU2VydmljZXMgZm9yIGF1dGhlbnRpY2F0aW9uXG5hcHAuc2VydmljZSgnYXV0aFNlcnZpY2UnLCBbJyR3aW5kb3cnLCBmdW5jdGlvbiAoJHdpbmRvdyl7XG4gICAgdGhpcy5wYXJzZUp3dCA9IGZ1bmN0aW9uICh0b2tlbikge1xuICAgICAgICBpZiAodG9rZW4pIHtcbiAgICAgICAgICAgIHZhciBiYXNlNjRVcmwgPSB0b2tlbi5zcGxpdCgnLicpWzFdO1xuICAgICAgICAgICAgdmFyIGJhc2U2NCA9IGJhc2U2NFVybC5yZXBsYWNlKCctJywgJysnKS5yZXBsYWNlKCdfJywgJy8nKTtcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKCR3aW5kb3cuYXRvYihiYXNlNjQpKTtcbiAgICAgICAgfSBlbHNlIHJldHVybiB7fTtcbiAgICB9O1xuXG4gICAgdGhpcy5zYXZlVG9rZW4gPSBmdW5jdGlvbiAodG9rZW4pIHtcbiAgICAgICAgJHdpbmRvdy5sb2NhbFN0b3JhZ2Uuand0VG9rZW4gPSB0b2tlbjtcbiAgICAgICAgY29uc29sZS5sb2coJ1NhdmVkIHRva2VuOicsJHdpbmRvdy5sb2NhbFN0b3JhZ2Uuand0VG9rZW4pO1xuICAgIH07XG5cbiAgICB0aGlzLmdldFRva2VuID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gJHdpbmRvdy5sb2NhbFN0b3JhZ2Uuand0VG9rZW47XG4gICAgfTtcblxuICAgIHRoaXMuaXNBdXRoZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0b2tlbiA9IHRoaXMuZ2V0VG9rZW4oKTtcbiAgICAgICAgaWYgKHRva2VuKSB7XG4gICAgICAgICAgICB2YXIgcGFyYW1zID0gdGhpcy5wYXJzZUp3dCh0b2tlbik7XG4gICAgICAgICAgICB2YXIgbm90RXhwaXJlZCA9IE1hdGgucm91bmQobmV3IERhdGUoKS5nZXRUaW1lKCkgLyAxMDAwKSA8PSBwYXJhbXMuZXhwO1xuICAgICAgICAgICAgaWYgKCFub3RFeHBpcmVkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2dvdXQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBub3RFeHBpcmVkO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHRoaXMubG9nb3V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBkZWxldGUgJHdpbmRvdy5sb2NhbFN0b3JhZ2Uuand0VG9rZW47XG4gICAgfTtcblxuICAgIC8vIGV4cG9zZSB1c2VyIGFzIGFuIG9iamVjdFxuICAgIHRoaXMuZ2V0VXNlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFyc2VKd3QodGhpcy5nZXRUb2tlbigpKVxuICAgIH07XG59XSk7XG5cbmFwcC5mYWN0b3J5KCdhdXRoSW50ZXJjZXB0b3InLCBbJyRxJywgJyRsb2NhdGlvbicsICdhdXRoU2VydmljZScsIGZ1bmN0aW9uICgkcSwgJGxvY2F0aW9uLCBhdXRoU2VydmljZSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHJlcXVlc3Q6IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICAgICAgICAgIGNvbmZpZy5oZWFkZXJzID0gY29uZmlnLmhlYWRlcnMgfHwge307XG4gICAgICAgICAgICBpZiAoYXV0aFNlcnZpY2UuaXNBdXRoZWQoKSkge1xuICAgICAgICAgICAgICAgIGNvbmZpZy5oZWFkZXJzLkF1dGhvcml6YXRpb24gPSAnQmVhcmVyICcgKyBhdXRoU2VydmljZS5nZXRUb2tlbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbmZpZztcbiAgICAgICAgfSxcbiAgICAgICAgcmVzcG9uc2U6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuXG4gICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDEpIHtcblxuICAgICAgICAgICAgICAgIC8vIGhhbmRsZSB0aGUgY2FzZSB3aGVyZSB0aGUgdXNlciBpcyBub3QgYXV0aGVudGljYXRlZFxuICAgICAgICAgICAgICAgICRsb2NhdGlvbi5wYXRoKFwiL2xvZ2luXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlIHx8ICRxLndoZW4ocmVzcG9uc2UpO1xuICAgICAgICB9LCByZXNwb25zZUVycm9yOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMSkge1xuICAgICAgICAgICAgICAgICRsb2NhdGlvbi5wYXRoKFwiL2xvZ2luXCIpO1xuXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAkcS5yZWplY3QocmVzcG9uc2UpO1xuICAgICAgICB9XG4gICAgfTtcbn1dKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
